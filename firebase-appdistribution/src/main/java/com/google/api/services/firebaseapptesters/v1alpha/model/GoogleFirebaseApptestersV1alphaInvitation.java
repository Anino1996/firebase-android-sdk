/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.firebaseapptesters.v1alpha.model;

/**
 * An invitation maps an email to an app. An invitation is required to link a testers device to an
 * app via the ConsentApp call.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase App Testers API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFirebaseApptestersV1alphaInvitation extends com.google.api.client.json.GenericJson {

  /**
   * The name of the invitation to retrieve Format: invitations/{invitation}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Invitation state
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Subscription state
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subscriptionState;

  /**
   * Information about the app that this invitation belongs to
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleFirebaseApptestersV1alphaTesterApp testerApp;

  /**
   * The tester email that the invite was sent to
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String testerEmail;

  /**
   * The name of the invitation to retrieve Format: invitations/{invitation}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The name of the invitation to retrieve Format: invitations/{invitation}
   * @param name name or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaInvitation setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Invitation state
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Invitation state
   * @param state state or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaInvitation setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Subscription state
   * @return value or {@code null} for none
   */
  public java.lang.String getSubscriptionState() {
    return subscriptionState;
  }

  /**
   * Subscription state
   * @param subscriptionState subscriptionState or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaInvitation setSubscriptionState(java.lang.String subscriptionState) {
    this.subscriptionState = subscriptionState;
    return this;
  }

  /**
   * Information about the app that this invitation belongs to
   * @return value or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaTesterApp getTesterApp() {
    return testerApp;
  }

  /**
   * Information about the app that this invitation belongs to
   * @param testerApp testerApp or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaInvitation setTesterApp(GoogleFirebaseApptestersV1alphaTesterApp testerApp) {
    this.testerApp = testerApp;
    return this;
  }

  /**
   * The tester email that the invite was sent to
   * @return value or {@code null} for none
   */
  public java.lang.String getTesterEmail() {
    return testerEmail;
  }

  /**
   * The tester email that the invite was sent to
   * @param testerEmail testerEmail or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaInvitation setTesterEmail(java.lang.String testerEmail) {
    this.testerEmail = testerEmail;
    return this;
  }

  @Override
  public GoogleFirebaseApptestersV1alphaInvitation set(String fieldName, Object value) {
    return (GoogleFirebaseApptestersV1alphaInvitation) super.set(fieldName, value);
  }

  @Override
  public GoogleFirebaseApptestersV1alphaInvitation clone() {
    return (GoogleFirebaseApptestersV1alphaInvitation) super.clone();
  }

}
