/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.firebaseapptesters.v1alpha.model;

/**
 * A representation of an app release
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase App Testers API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFirebaseApptestersV1alphaRelease extends com.google.api.client.json.GenericJson {

  /**
   * Computationally-efficient hash of an apk. This value is computed in our backend and our Android
   * SDK by zipping the apk file. Used by the SDK to map a release on the device to a release
   * returned from the server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String apkHash;

  /**
   * Type of binary
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String binaryType;

  /**
   * versionCode on Android, CFBundleVersion on iOS (e.g. "456")
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String buildVersion;

  /**
   * Hash of binary on Android, modified hash excluding app metadata (e.g. provisioning profile,
   * version info) on iOS. NOTE - on iOS, releases with the same code but different version numbers
   * will have the same code_hash NOTE - ad-hoc iOS releases with the same code but different
   * provisioning profiles will have the same code_hash
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String codeHash;

  /**
   * versionName on Android, CFBundleShortVersionString on iOS (e.g. "1.2.3")
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayVersion;

  /**
   * Reason (if any) why the release is missing a distribution for this device
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String distributionMissingReason;

  /**
   * Short-lived download URL
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String downloadUrl;

  /**
   * Whether or not this is an enterprise release (vs. ad-hoc) for iOS
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enterprise;

  /**
   * The time at which this Release will expire
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String expirationTime;

  /**
   * App binary file size
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long fileSize;

  /**
   * IAS artifact id This value is inserted into the manifest of APK's installed via IAS in the
   * com.android.vending.internal.apk.id metadata field Used to map a release to an APK installed
   * via an app bundle
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String iasArtifactId;

  /**
   * Whether or not this is the latest release that the tester has been added to
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean latest;

  /**
   * The name of the release Format: devices/{device}/testerApps/{tester_app}/releases/{release}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Release notes
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String releaseNotes;

  /**
   * Timestamp when the initial invitation(s) were sent for the release
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String releaseTime;

  /**
   * Computationally-efficient hash of an apk. This value is computed in our backend and our Android
   * SDK by zipping the apk file. Used by the SDK to map a release on the device to a release
   * returned from the server.
   * @return value or {@code null} for none
   */
  public java.lang.String getApkHash() {
    return apkHash;
  }

  /**
   * Computationally-efficient hash of an apk. This value is computed in our backend and our Android
   * SDK by zipping the apk file. Used by the SDK to map a release on the device to a release
   * returned from the server.
   * @param apkHash apkHash or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setApkHash(java.lang.String apkHash) {
    this.apkHash = apkHash;
    return this;
  }

  /**
   * Type of binary
   * @return value or {@code null} for none
   */
  public java.lang.String getBinaryType() {
    return binaryType;
  }

  /**
   * Type of binary
   * @param binaryType binaryType or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setBinaryType(java.lang.String binaryType) {
    this.binaryType = binaryType;
    return this;
  }

  /**
   * versionCode on Android, CFBundleVersion on iOS (e.g. "456")
   * @return value or {@code null} for none
   */
  public java.lang.String getBuildVersion() {
    return buildVersion;
  }

  /**
   * versionCode on Android, CFBundleVersion on iOS (e.g. "456")
   * @param buildVersion buildVersion or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setBuildVersion(java.lang.String buildVersion) {
    this.buildVersion = buildVersion;
    return this;
  }

  /**
   * Hash of binary on Android, modified hash excluding app metadata (e.g. provisioning profile,
   * version info) on iOS. NOTE - on iOS, releases with the same code but different version numbers
   * will have the same code_hash NOTE - ad-hoc iOS releases with the same code but different
   * provisioning profiles will have the same code_hash
   * @return value or {@code null} for none
   */
  public java.lang.String getCodeHash() {
    return codeHash;
  }

  /**
   * Hash of binary on Android, modified hash excluding app metadata (e.g. provisioning profile,
   * version info) on iOS. NOTE - on iOS, releases with the same code but different version numbers
   * will have the same code_hash NOTE - ad-hoc iOS releases with the same code but different
   * provisioning profiles will have the same code_hash
   * @param codeHash codeHash or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setCodeHash(java.lang.String codeHash) {
    this.codeHash = codeHash;
    return this;
  }

  /**
   * versionName on Android, CFBundleShortVersionString on iOS (e.g. "1.2.3")
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayVersion() {
    return displayVersion;
  }

  /**
   * versionName on Android, CFBundleShortVersionString on iOS (e.g. "1.2.3")
   * @param displayVersion displayVersion or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setDisplayVersion(java.lang.String displayVersion) {
    this.displayVersion = displayVersion;
    return this;
  }

  /**
   * Reason (if any) why the release is missing a distribution for this device
   * @return value or {@code null} for none
   */
  public java.lang.String getDistributionMissingReason() {
    return distributionMissingReason;
  }

  /**
   * Reason (if any) why the release is missing a distribution for this device
   * @param distributionMissingReason distributionMissingReason or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setDistributionMissingReason(java.lang.String distributionMissingReason) {
    this.distributionMissingReason = distributionMissingReason;
    return this;
  }

  /**
   * Short-lived download URL
   * @return value or {@code null} for none
   */
  public java.lang.String getDownloadUrl() {
    return downloadUrl;
  }

  /**
   * Short-lived download URL
   * @param downloadUrl downloadUrl or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setDownloadUrl(java.lang.String downloadUrl) {
    this.downloadUrl = downloadUrl;
    return this;
  }

  /**
   * Whether or not this is an enterprise release (vs. ad-hoc) for iOS
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnterprise() {
    return enterprise;
  }

  /**
   * Whether or not this is an enterprise release (vs. ad-hoc) for iOS
   * @param enterprise enterprise or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setEnterprise(java.lang.Boolean enterprise) {
    this.enterprise = enterprise;
    return this;
  }

  /**
   * The time at which this Release will expire
   * @return value or {@code null} for none
   */
  public String getExpirationTime() {
    return expirationTime;
  }

  /**
   * The time at which this Release will expire
   * @param expirationTime expirationTime or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setExpirationTime(String expirationTime) {
    this.expirationTime = expirationTime;
    return this;
  }

  /**
   * App binary file size
   * @return value or {@code null} for none
   */
  public java.lang.Long getFileSize() {
    return fileSize;
  }

  /**
   * App binary file size
   * @param fileSize fileSize or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setFileSize(java.lang.Long fileSize) {
    this.fileSize = fileSize;
    return this;
  }

  /**
   * IAS artifact id This value is inserted into the manifest of APK's installed via IAS in the
   * com.android.vending.internal.apk.id metadata field Used to map a release to an APK installed
   * via an app bundle
   * @return value or {@code null} for none
   */
  public java.lang.String getIasArtifactId() {
    return iasArtifactId;
  }

  /**
   * IAS artifact id This value is inserted into the manifest of APK's installed via IAS in the
   * com.android.vending.internal.apk.id metadata field Used to map a release to an APK installed
   * via an app bundle
   * @param iasArtifactId iasArtifactId or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setIasArtifactId(java.lang.String iasArtifactId) {
    this.iasArtifactId = iasArtifactId;
    return this;
  }

  /**
   * Whether or not this is the latest release that the tester has been added to
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLatest() {
    return latest;
  }

  /**
   * Whether or not this is the latest release that the tester has been added to
   * @param latest latest or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setLatest(java.lang.Boolean latest) {
    this.latest = latest;
    return this;
  }

  /**
   * The name of the release Format: devices/{device}/testerApps/{tester_app}/releases/{release}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The name of the release Format: devices/{device}/testerApps/{tester_app}/releases/{release}
   * @param name name or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Release notes
   * @return value or {@code null} for none
   */
  public java.lang.String getReleaseNotes() {
    return releaseNotes;
  }

  /**
   * Release notes
   * @param releaseNotes releaseNotes or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setReleaseNotes(java.lang.String releaseNotes) {
    this.releaseNotes = releaseNotes;
    return this;
  }

  /**
   * Timestamp when the initial invitation(s) were sent for the release
   * @return value or {@code null} for none
   */
  public String getReleaseTime() {
    return releaseTime;
  }

  /**
   * Timestamp when the initial invitation(s) were sent for the release
   * @param releaseTime releaseTime or {@code null} for none
   */
  public GoogleFirebaseApptestersV1alphaRelease setReleaseTime(String releaseTime) {
    this.releaseTime = releaseTime;
    return this;
  }

  @Override
  public GoogleFirebaseApptestersV1alphaRelease set(String fieldName, Object value) {
    return (GoogleFirebaseApptestersV1alphaRelease) super.set(fieldName, value);
  }

  @Override
  public GoogleFirebaseApptestersV1alphaRelease clone() {
    return (GoogleFirebaseApptestersV1alphaRelease) super.clone();
  }

}
